-- *********************************** SqlDBM: Databricks ***********************************
-- * Generated by SqlDBM: Databricks Sample Project, prod vs test by hazal.sener@sqldbm.com *

ALTER TABLE mySchema.lineitem
DROP CONSTRAINT FK_orders;
ALTER TABLE mySchema.lineitem
DROP CONSTRAINT FK_supplier;
DROP TABLE mySchema.customer_orders;
ALTER TABLE mySchema.region
  SET TBLPROPERTIES (delta.checkpoint.writeStatsAsJson = false, delta.checkpoint.writeStatsAsStruct = true, delta.minReaderVersion = 1, delta.minWriterVersion = 2);
COMMENT ON TABLE mySchema.region IS 'region master data';
ALTER TABLE mySchema.part
  SET TBLPROPERTIES (delta.checkpoint.writeStatsAsJson = false, delta.checkpoint.writeStatsAsStruct = true, delta.minReaderVersion = 1, delta.minWriterVersion = 2);
COMMENT ON TABLE mySchema.part IS 'parts that we sell to end clients';
ALTER TABLE mySchema.nation
  SET TBLPROPERTIES (delta.checkpoint.writeStatsAsJson = false, delta.checkpoint.writeStatsAsStruct = true, delta.minReaderVersion = 1, delta.minWriterVersion = 2);
COMMENT ON TABLE mySchema.nation IS 'nation grouping for sales regions';
ALTER TABLE mySchema.supplier
  DROP COLUMNS (ETL_ID, ETL_TIMESTAMP);
ALTER TABLE mySchema.supplier
  SET TBLPROPERTIES (delta.checkpoint.writeStatsAsJson = false, delta.checkpoint.writeStatsAsStruct = true, delta.minReaderVersion = 1, delta.minWriterVersion = 2);
COMMENT ON TABLE mySchema.supplier IS 'suppliers who source our inventory';
ALTER TABLE mySchema.customer
  DROP COLUMNS (ETL_ID, ETL_TIMESTAMP);
ALTER TABLE mySchema.customer
  SET TBLPROPERTIES (delta.checkpoint.writeStatsAsJson = false, delta.checkpoint.writeStatsAsStruct = true, delta.minReaderVersion = 1, delta.minWriterVersion = 2);
COMMENT ON TABLE mySchema.customer IS 'Customer master data';
ALTER TABLE mySchema.partsupp
  SET TBLPROPERTIES (delta.checkpoint.writeStatsAsJson = false, delta.checkpoint.writeStatsAsStruct = true, delta.minReaderVersion = 1, delta.minWriterVersion = 2);
COMMENT ON TABLE mySchema.partsupp IS 'suppliers and their related stock';
ALTER TABLE mySchema.orders
  SET TBLPROPERTIES (delta.checkpoint.writeStatsAsJson = false, delta.checkpoint.writeStatsAsStruct = true, delta.minReaderVersion = 1, delta.minWriterVersion = 2);
COMMENT ON TABLE mySchema.orders IS 'order totals';
ALTER TABLE mySchema.lineitem
  DROP COLUMNS (quantity, extendedprice, discount, returnflag, shipdate, commitdate, shipinstruct, shipmode, ETL_ID, ETL_TIMESTAMP);
ALTER TABLE mySchema.lineitem
  SET TBLPROPERTIES (delta.checkpoint.writeStatsAsJson = false, delta.checkpoint.writeStatsAsStruct = true, delta.minReaderVersion = 1, delta.minWriterVersion = 2);
ALTER TABLE mySchema.lineitem
  RENAME COLUMN extendedprice TO quantity;
ALTER TABLE mySchema.lineitem
  RENAME COLUMN discount TO extendedprice;
ALTER TABLE mySchema.lineitem
  RENAME COLUMN tax TO discount;
ALTER TABLE mySchema.lineitem
  RENAME COLUMN linestatus TO returnflag;
ALTER TABLE mySchema.lineitem
  RENAME COLUMN commitdate TO shipdate;
ALTER TABLE mySchema.lineitem
  RENAME COLUMN receiptdate TO commitdate;
ALTER TABLE mySchema.lineitem
  RENAME COLUMN shipmode TO shipinstruct;
ALTER TABLE mySchema.lineitem
  RENAME COLUMN comment TO shipmode;
ALTER TABLE mySchema.lineitem
  SET TBLPROPERTIES (delta.checkpoint.writeStatsAsJson = false, delta.checkpoint.writeStatsAsStruct = true, delta.minReaderVersion = 1, delta.minWriterVersion = 2);
ALTER TABLE mySchema.lineitem
  ADD COLUMNS (
    nationkey     bigint,
    extendedprice decimal(18, 2),
    discount      decimal(18, 2),
    tax           decimal(18, 2),
    linestatus    string,
    commitdate    date,
    receiptdate   date,
    shipmode      string,
    comment       string);
ALTER TABLE mySchema.lineitem
ALTER COLUMN nationkey SET NOT NULL;
COMMENT ON TABLE mySchema.lineitem IS 'individual line item related to sales order';
CREATE SCHEMA marts;
CREATE SCHEMA products;
DROP VIEW mySchema.nation_region;
DROP VIEW mySchema.legacy_customer;
CREATE VIEW marts.nation_region 
AS
 SELECT na.nationkey , na.regionkey, re.name
         FROM marts.nation AS na 
         INNER JOIN marts.region AS re 
            ON na.regionkey = re.regionkey;
    AS SELECT na.nationkey , na.name , na.regionkey, re.name
         FROM myDb.mySchema.nation AS na 
         INNER JOIN myDb.mySchema.region AS re 
            ON na.regionkey = re.regionkey;
CREATE VIEW marts.legacy_customer 
COMMENT 'View for legacy customers with over 5 years of loyalty'
AS
 SELECT custkey, FirstName FROM marts.customers WHERE BirthDate >= '1975-01-01';
CREATE VIEW myDb.mySchema.legacy_customer
    (custkey COMMENT 'Unique identification number', 
	 name
	)
    COMMENT 'View for legacy customers with over 5 years of loyalty'
    AS SELECT custkey, name
         FROM myDb.mySchema.customer
        WHERE active_years >= 5;
ALTER TABLE mySchema.supplier
DROP CONSTRAINT PK_PK_2_supplier;
ALTER TABLE mySchema.supplier
ADD CONSTRAINT PK_PK_2_supplier PRIMARY KEY (suppkey, nationkey);
ALTER TABLE mySchema.lineitem
ADD CONSTRAINT PK_PK_2_lineitem PRIMARY KEY (linenumber, orderkey);
CREATE TABLE marts.stores
(
 store_id   int NOT NULL CONSTRAINT pk_1_3 PRIMARY KEY,
 store_name string NOT NULL,
 phone      string,
 email      string,
 street     string,
 city       string,
 state      string,
 zip_code   string
)
USING DELTA
 COMMENT 'table includes the store’s information. Each store has a store name, contact information such as phone and email, and an address including street, city, state, and zip code.'
 TBLPROPERTIES (delta.lastCommitTimestamp = 1684869606000, delta.lastUpdateVersion = 4, delta.minWriterVersion = 5, delta.minReaderVersion = 2, delta.checkpoint.writeStatsAsStruct = true, delta.checkpoint.writeStatsAsJson = false, delta.columnMapping.mode = 'name', delta.columnMapping.maxColumnId = 8);
CREATE TABLE marts.region
(
 regionkey bigint NOT NULL,
 name      string,
 comment   string
)
USING DELTA
 TBLPROPERTIES (delta.lastCommitTimestamp = 1681847102000, delta.lastUpdateVersion = 0, delta.minWriterVersion = 5, delta.minReaderVersion = 2, delta.checkpoint.writeStatsAsStruct = true, delta.checkpoint.writeStatsAsJson = false, delta.columnMapping.mode = 'name', delta.columnMapping.maxColumnId = 3);
CREATE TABLE marts.nation
(
 nationkey bigint NOT NULL,
 regionkey bigint NOT NULL,
 name      string,
 comment   string
)
USING DELTA
 TBLPROPERTIES (delta.lastCommitTimestamp = 1681847131000, delta.lastUpdateVersion = 0, delta.minWriterVersion = 5, delta.minReaderVersion = 2, delta.checkpoint.writeStatsAsStruct = true, delta.checkpoint.writeStatsAsJson = false, delta.columnMapping.mode = 'name', delta.columnMapping.maxColumnId = 4);
CREATE TABLE marts.customers
(
 custkey               int NOT NULL COMMENT 'Customer Identifier sourced from Salesforce.' CONSTRAINT pk_1_2 PRIMARY KEY,
 nationkey             bigint NOT NULL,
 regionkey             bigint NOT NULL,
 GeographyKey          decimal(38,0) NOT NULL COMMENT 'Geographic informatio',
 CustomerAlternateKey  string NOT NULL COMMENT 'Alternate Key',
 Title                 string COMMENT 'Title of the Customer',
 FirstName             string COMMENT 'Name of the customer',
 MiddleName            string COMMENT 'Middle name of the customer',
 LastName              string COMMENT 'Surname of the customer',
 NameStyle             string COMMENT 'Prefered name',
 BirthDate             date COMMENT 'The birtday of the client',
 MaritalStatus         string COMMENT 'Married/Single',
 Suffix                string COMMENT 'Appendix of the name',
 Gender                string COMMENT 'F/M',
 EmailAddress          string COMMENT 'e-mail address of the client',
 YearlyIncome          decimal(38,0) COMMENT 'Brute annual income',
 TotalChildren         decimal(38,0) COMMENT 'The number of children',
 DECIMALChildrenAtHome decimal(38,0) COMMENT 'The number of children who live with that client',
 EnglishEducation      string COMMENT 'Yes/No',
 SpanishEducation      string COMMENT 'Yes/No',
 FrenchEducation       string COMMENT 'Yes/No',
 EnglishOccupation     string COMMENT 'Yes/No',
 SpanishOccupation     string COMMENT 'Yes/No',
 FrenchOccupation      string COMMENT 'Yes/No',
 HouseOwnerFlag        string COMMENT 'Yes/No',
 DECIMALCarsOwned      decimal(38,0) COMMENT 'The number of the cars that client has',
 AddressLine           string COMMENT 'Billing address',
 AddressLine2          string COMMENT 'Billing address',
 Phone                 string COMMENT 'Phone number of the client',
 DateFirstPurchase     date COMMENT 'The first time the client bought the product',
 CommuteDistance       string
)
USING DELTA
 COMMENT 'table stores customer’s information including first name, last name, phone, email, street, city, state and zip code.'
 TBLPROPERTIES (delta.lastCommitTimestamp = 1684919214000, delta.lastUpdateVersion = 2, delta.minWriterVersion = 5, delta.minReaderVersion = 2, delta.checkpoint.writeStatsAsStruct = true, delta.checkpoint.writeStatsAsJson = false, delta.columnMapping.mode = 'name', delta.columnMapping.maxColumnId = 31);
CREATE TABLE products.categories
(
 category_id   int NOT NULL CONSTRAINT pk_2 PRIMARY KEY,
 category_name string NOT NULL
)
USING DELTA
 COMMENT 'table stores the bike’s categories such as children bicycles, comfort bicycles, and electric bikes.'
 TBLPROPERTIES (delta.lastCommitTimestamp = 1684869640000, delta.lastUpdateVersion = 1, delta.minWriterVersion = 5, delta.minReaderVersion = 2, delta.checkpoint.writeStatsAsStruct = true, delta.checkpoint.writeStatsAsJson = false, delta.columnMapping.mode = 'name', delta.columnMapping.maxColumnId = 2);
CREATE TABLE products.brands
(
 brand_id   int NOT NULL CONSTRAINT pk_3 PRIMARY KEY,
 brand_name string NOT NULL
)
USING DELTA
 COMMENT 'table stores the brand’s information of bikes, for example, Electra, Haro, and Heller.'
 TBLPROPERTIES (delta.lastCommitTimestamp = 1684869763000, delta.lastUpdateVersion = 1, delta.minWriterVersion = 5, delta.minReaderVersion = 2, delta.checkpoint.writeStatsAsStruct = true, delta.checkpoint.writeStatsAsJson = false, delta.columnMapping.mode = 'name', delta.columnMapping.maxColumnId = 2);
CREATE TABLE products.products
(
 product_id   int NOT NULL CONSTRAINT pk_4 PRIMARY KEY,
 product_name string NOT NULL,
 brand_id     int NOT NULL CONSTRAINT fk_3 REFERENCES products.brands,
 category_id  int NOT NULL CONSTRAINT fk_4 REFERENCES products.categories,
 model_year   smallint NOT NULL,
 list_price   decimal(10,2) NOT NULL
)
USING DELTA
 COMMENT 'table stores the product’s information such as name, brand, category, model year, and list price.'
 TBLPROPERTIES (delta.lastCommitTimestamp = 1684869780000, delta.lastUpdateVersion = 2, delta.minWriterVersion = 5, delta.minReaderVersion = 2, delta.checkpoint.writeStatsAsStruct = true, delta.checkpoint.writeStatsAsJson = false, delta.columnMapping.mode = 'name', delta.columnMapping.maxColumnId = 6);
CREATE TABLE marts.orders
(
 order_id      int NOT NULL CONSTRAINT pk_6 PRIMARY KEY,
 custkey       int NOT NULL COMMENT 'Customer Identifier' CONSTRAINT fk_3_2 REFERENCES marts.customers,
 order_status  tinyint NOT NULL,
 order_date    date NOT NULL,
 required_date date NOT NULL,
 shipped_date  date,
 store_id      int NOT NULL,
 staff_id      int NOT NULL
)
USING DELTA
 COMMENT 'table stores the sales order’s header information including customer, order status, order date, required date, shipped date.'
 TBLPROPERTIES (delta.lastCommitTimestamp = 1684869806000, delta.lastUpdateVersion = 2, delta.minWriterVersion = 5, delta.minReaderVersion = 2, delta.checkpoint.writeStatsAsStruct = true, delta.checkpoint.writeStatsAsJson = false, delta.columnMapping.mode = 'name', delta.columnMapping.maxColumnId = 8);
CREATE TABLE products.stocks
(
 product_id int NOT NULL CONSTRAINT fk_10 REFERENCES products.products,
 store_id   int NOT NULL CONSTRAINT fk_11 REFERENCES marts.stores,
 quantity   int
)
USING DELTA
 COMMENT 'table stores the inventory information i.e. the quantity of a particular product in a specific store.'
 TBLPROPERTIES (delta.lastCommitTimestamp = 1684869850000, delta.lastUpdateVersion = 4, delta.minWriterVersion = 5, delta.minReaderVersion = 2, delta.checkpoint.writeStatsAsStruct = true, delta.checkpoint.writeStatsAsJson = false, delta.columnMapping.mode = 'name', delta.columnMapping.maxColumnId = 3);
CREATE TABLE marts.fct_order_items
(
 order_id   int NOT NULL CONSTRAINT fk_3 REFERENCES marts.orders,
 item_id    int NOT NULL CONSTRAINT pk_7 PRIMARY KEY,
 product_id int NOT NULL CONSTRAINT fk_8 REFERENCES products.products,
 quantity   int NOT NULL,
 list_price decimal(10,2) NOT NULL,
 discount   decimal(4,2) NOT NULL
)
USING DELTA
 COMMENT 'table stores the line items of a sales order. Each line item belongs to a sales order specified by the order_id column.'
 TBLPROPERTIES (delta.lastCommitTimestamp = 1684869835000, delta.lastUpdateVersion = 2, delta.minWriterVersion = 5, delta.minReaderVersion = 2, delta.checkpoint.writeStatsAsStruct = true, delta.checkpoint.writeStatsAsJson = false, delta.columnMapping.mode = 'name', delta.columnMapping.maxColumnId = 6);
CREATE TABLE mySchema.order_lineitem
(
 orderkey   bigint NOT NULL CONSTRAINT FK_orders REFERENCES mySchema.orders,
 linenumber int NOT NULL,
 orderkey_1 bigint NOT NULL,
 CONSTRAINT PK_1_order_lineitem PRIMARY KEY (orderkey, linenumber, orderkey_1),
 CONSTRAINT FK_lineitem FOREIGN KEY (linenumber, orderkey_1) REFERENCES mySchema.lineitem (linenumber, orderkey)
);
ALTER TABLE mySchema.lineitem
ADD CONSTRAINT FK_supplier FOREIGN KEY (suppkey, nationkey) REFERENCES mySchema.supplier (suppkey, nationkey);
ALTER TABLE mySchema.lineitem
ADD CONSTRAINT FK_orders_1 FOREIGN KEY (orderkey) REFERENCES mySchema.orders (orderkey);